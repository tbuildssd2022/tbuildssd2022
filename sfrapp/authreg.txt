''' This is the remainder of the change password code'''
    # Confirm access id from session matches the 
    # retrieve the user 
    #uid= User.query.filter_by(accessid=thisaccessid).first()

    #if account:
    #    flash('Sorry, the email address {} appears to be in use'.format(email))
    #    return redirect(url_for('auth.register'))
    #account= User.query.filter_by(id=clientid).first()
    #if not account:
    #    msg=Markup('Sorry, the account identifier does not appear to preregistered, double check you have input the 5 digit code correctly.<br/> If you are still encountering issues please contact Balam customer support: <br/> 1-888-BALAM27 (1-888-225-2627)')
    #    flash(msg)
    #    return redirect(url_for('auth.register'))
    #    #return '<h1> Sorry, the account identifier does not appear to preregistered, double check you have input the 6 digit code correctly</h1><h2>If you are still encountering issues please contact Balam customer support at 1-888-BALAM27 (1-888-225-2627)</h2>'
    #if account.email:
    #    msg=Markup('Sorry, the account identifier {} is currently associated with the email {}'.format(account.id, account.email))
    #    flash(msg)
    #    return redirect(url_for('auth.register'))
    #    #return '<h1> Sorry, the account identifier {} is currently associated with the email {}</h1>'.format(account.id, account.email)
    #else:
    #    # Do the SQL update here
    #    pwdstr = generate_password_hash(password)
    #    account.email= email
    #    account.pwd = pwdstr 
    #    db.session.commit()
    #    #User.query.filter_by(id=clientid).update(dict(email=email,pwd=pwdstr))
    #    return render_template('signup.html',id=clientid,email=email,clientname=account.clientname)
    #    #return '<h1> Input cid: {}, email: {}, pwd: {} for company {}'.format(clientid,email,password,account.clientname)



#